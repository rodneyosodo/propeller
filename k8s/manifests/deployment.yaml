apiVersion: apps/v1
kind: Deployment
metadata:
  name: propeller-operator
  namespace: propeller-system
  labels:
    app.kubernetes.io/name: propeller-operator
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: propeller-operator
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: propeller-operator
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: propeller-operator
      containers:
      - name: manager
        image: propeller/operator:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        - containerPort: 9443
          name: webhook
          protocol: TCP
        env:
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROPELLER_DOMAIN_ID
          value: "propeller"
        - name: PROPELLER_CHANNEL_ID  
          value: "control"
        - name: MQTT_BROKER
          value: "mqtt://mqtt-broker.propeller-system.svc.cluster.local:1883"
        - name: ENABLE_LEADER_ELECTION
          value: "true"
        - name: METRICS_ADDR
          value: ":8080"
        - name: HEALTH_PROBE_ADDR
          value: ":8081"
        - name: WEBHOOK_ADDR
          value: ":9443"
        - name: LOG_LEVEL
          value: "info"
        - name: SCHEDULER_TYPE
          value: "hybrid"
        - name: HEALTH_CHECK_INTERVAL
          value: "1m"
        - name: OFFLINE_THRESHOLD
          value: "5m"
        - name: FAILURE_THRESHOLD
          value: "15m"
        - name: AUTO_EVACUATE_TASKS
          value: "true"
        - name: ENABLE_ALERTS
          value: "true"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: propeller-operator-metrics
  namespace: propeller-system
  labels:
    app.kubernetes.io/name: propeller-operator
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: propeller-operator
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  name: propeller-operator-webhook
  namespace: propeller-system
  labels:
    app.kubernetes.io/name: propeller-operator
    app.kubernetes.io/component: webhook
spec:
  type: ClusterIP
  ports:
  - name: webhook
    port: 9443
    targetPort: 9443
    protocol: TCP
  selector:
    app.kubernetes.io/name: propeller-operator
    app.kubernetes.io/component: controller